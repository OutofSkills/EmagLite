@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        @if(AppState.isCartEmpty)
        {
            <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Inherit" Target="_blank" Class="mx-6 my-4" />
        }
        else
        {
            <MudBadge Color="Color.Error" Overlap="true" Dot="true" Bordered="true" Class="mx-6 my-4">
                <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Inherit" Link="/account/cart" />
            </MudBadge>
        }

        <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Link="/authentication/login" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">EmagLite</MudText>
        </MudDrawerHeader>
        <ClientNavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pt-3">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    [Inject] public ICartService CartService{ get; set; }

    [Inject] public AppState AppState{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        AppState.OnChange += StateHasChanged;

        var products = await CartService.GetProductsAsync();
        if(products.Any())
        {
            AppState.isCartEmpty = false;
        }
        else
        {
            AppState.isCartEmpty = true;
        }
    }

    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }

}